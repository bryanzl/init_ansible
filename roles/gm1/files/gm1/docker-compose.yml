version: '3.5'
services:
  web:
    build:
      context: ./web-portal
    container_name: zabbix-nginx
    ports:
      - "9880:8080"
      - "9881:8081"
    links:
      - mysql
      - server
    environment:
      SET_CONTAINER_TIMEZONE: "true"
      CONTAINER_TIMEZONE: "Asia/Shanghai"
      DB_SERVER_HOST: "mysql"
      MYSQL_DATABASE: "zabbix"
      MYSQL_USER: "zabbix"
      MYSQL_PASSWORD: "szx123456"
      ZBX_SERVER_HOST: zabbix-server
      PHP_TZ: "Asia/Shanghai"
    volumes:
      - /etc/timezone:/etc/timezone        
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime
      - /etc/hosts:/etc/hosts
    user: root
    depends_on:
      - mysql
      - server
    sysctls:
      - net.core.somaxconn=65535
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    stop_grace_period: 10s


     # mysql 容器配置
  mysql:
    image: mysql:5.7
    container_name: zabbix-mysql
    command: 
      - mysqld
      - --character-set-server=utf8
      - --collation-server=utf8_bin
      - --default-authentication-plugin=mysql_native_password
      - --max_connections=1000
    ports:
      - "127.0.0.1:3306:3306"
    env_file:
      - env_mysql
    user: root
    volumes:
      - /zabbix/mysql:/var/lib/mysql:rw
      - /etc/localtime:/etc/localtime:ro
      - /etc/hosts:/etc/hosts
    restart: always
    stop_grace_period: 1m

# zabbix-server 容器配置
  server:
    image: zabbix/zabbix-server-mysql:alpine-5.0-latest
    container_name: zabbix-server
    environment:
      SET_CONTAINER_TIMEZONE: "true"
      CONTAINER_TIMEZONE: "Asia/Shanghai"
      DB_SERVER_HOST: "mysql"
      MYSQL_DATABASE: "zabbix"
      MYSQL_USER: "zabbix"
      MYSQL_PASSWORD: "szx123456"
      MYSQL_ROOT_PASSWORD: "szx20170808"
    env_file:
      - env_server
    ports:
      - "10051:10051"
    volumes:
      - /etc/timezone:/etc/timezone                      #同步主机时区
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime       #同步主机时间
      - /etc/hosts:/etc/hosts
    links:
      - mysql
    depends_on:
      - mysql                                           #先启动zabbix
    ulimits:
     nproc: 65535
     nofile:
       soft: 20000
       hard: 40000
    user: root
    restart: always
    stop_grace_period: 30s
    sysctls:
      - net.ipv4.ip_local_port_range=1024 65000
      - net.ipv4.conf.all.accept_redirects=0
      - net.ipv4.conf.all.secure_redirects=0
      - net.ipv4.conf.all.send_redirects=0

  res_server:
    image: nginx:alpine
    restart: always
    ports:
      - '8484:80'
    command: >
      /bin/sh -c "
        echo 'server {' > /etc/nginx/conf.d/default.conf &&
        echo ' listen 80;' >> /etc/nginx/conf.d/default.conf &&
        echo ' server_name qzfs.tw.cdn.mecheast.com;' >> /etc/nginx/conf.d/default.conf &&
        echo ' location / {' >> /etc/nginx/conf.d/default.conf &&
        echo '   root /usr/share/nginx/html;' >> /etc/nginx/conf.d/default.conf &&
        echo '   index index.html index.htm;' >> /etc/nginx/conf.d/default.conf &&
        echo ' }' >> /etc/nginx/conf.d/default.conf &&
        echo '}' >> /etc/nginx/conf.d/default.conf &&
        exec nginx -g 'daemon off;'"
    volumes:
      - res_server_data:/usr/share/nginx/html
      - /etc/hosts:/etc/hosts

  kibana:
    image: kibana:${ELASTIC_VER}
    restart: always
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: ${KIBANA_ES_HOSTS}
    volumes:
      - /etc/hosts:/etc/hosts
    ports:
      - 127.0.0.1:5601:5601

  grafana:
    image: grafana/grafana:${GRAFANA_VER}
    restart: always
    volumes:
      - grafana_data:/var/lib/grafana
      - /etc/hosts:/etc/hosts
    environment:
      TZ: Asia/Shanghai
      GF_INSTALL_PLUGINS: alexanderzobnin-zabbix-app
    ports:
      - 9882:3000

  logstash:
    image: logstash:${ELASTIC_VER}
    restart: always
    network_mode: host
    ports:
      - 5044:5044
    volumes:
      - logstash_config:/usr/share/logstash/config/
      - logstash_pipeline:/usr/share/logstash/pipeline/
      - /etc/hosts:/etc/hosts

  dist_server:
    image: ${DOCKER_REGISTRY}/gs/dist_server:${DIST_SERVER_VER}
    restart: always
    ports:
      - '50022:22'
    volumes:
      - dist_server_data:/data
      - res_server_data:/res
    #volumes_from:
      #- logstash:rw

  es:
    image: elasticsearch:${ELASTIC_VER}
    restart: always
    network_mode: host
    environment:
      - node.name=es1
      - cluster.name=${ES_CLUSTER_NAME}
      - cluster.initial_master_nodes=${ES_CLUSTER_INITIAL_MASTER_NODES}
      - discovery.seed_hosts=gm2,gm3
      - cluster.max_shards_per_node=9999
      - thread_pool.write.queue_size=800
      - bootstrap.memory_lock=true
      - node.master=true
      - node.data=true
      - node.ingest=true
      - node.ml=false
      - node.attr.zone=${ES_NODE_ZONE}
      - network.host=0.0.0.0
      - network.publish_host=192.168.3.33
      - transport.tcp.port=9300
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=true
      - xpack.monitoring.collection.enabled=true
      - xpack.monitoring.elasticsearch.collection.enabled=true
      - indices.fielddata.cache.size=35%
      #- ES_HEAP_SIZE=512m                    #根据内核情况而定
      - "ES_JAVA_OPTS=-Xms1g  -Xmx1g "         #根据内核情况而定
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es1_data:/usr/share/elasticsearch/data
      - /etc/hosts:/etc/hosts
    ports:
      - 9200:9200
      - 9300:9300

  bsmongo:
    container_name: bsmongo
    image: mongo:${MONGO_VER}
    restart: always
    command: mongos --bind_ip_all --port=27017 --configdb=${MONGO_CONFIGDB}
    volumes:
      - /etc/hosts:/etc/hosts
    ports:
      - '127.0.0.1:27019:27017'

  bsmongo_backup:
    container_name: bsmongo_backup
    build:
      context: ./bsmongo_backup
    restart: always
    environment:
    - BACKUP_MINUTES="0,15,30,45"
    volumes:
      - /etc/hosts:/etc/hosts
      - bsmongo_backup_data:/backup

volumes:
  grafana_data:
    driver: local

  dist_server_data:
    driver: local

  res_server_data:
    driver: local

  logstash_config:
    driver: local
  logstash_pipeline:
    driver: local

  es1_data:
    driver: local

  bsmongo_backup_data:
    driver: local
